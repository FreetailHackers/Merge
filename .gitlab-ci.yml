workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS && $CI_COMMIT_BRANCH != "main"'
      when: never
    - if: "$CI_COMMIT_BRANCH == 'amplify-prod'"
      when: never
    - if: "$CI_COMMIT_BRANCH"

stages:
  - build
  - pre-staging
  - staging
  - test
  - pre-production
  - production

build_backend:
  image: node:16.16.0-slim
  stage: build
  variables:
    FOLDER: default-service
  before_script:
    - cd $FOLDER
    - npm install
  script: npm run test -- --bail --passWithNoTests

build_frontend:
  extends: build_backend
  variables:
    FOLDER: client
  script:
    - echo "REACT_APP_API_URL=http://localhost:5002" > .env
    - npm run build
    - npm run test -- --bail --passWithNoTests
    - rm .env

lint_format_frontend:
  extends: build_frontend
  script:
    - npx prettier --check "**/*.js"
    - npm run lint

lint_format_backend:
  extends: lint_format_frontend
  variables:
    FOLDER: default-service

create_integ:
  stage: pre-staging
  image: $EB_IMAGE
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  environment:
    name: integ
    url: http://freetail-merge-integ.us-east-1.elasticbeanstalk.com
  variables:
    EB_ENVIRONMENT: freetail-merge-$CI_ENVIRONMENT_NAME
    FOLDER: .
  before_script:
    - mkdir ~/.aws/
    - touch ~/.aws/credentials
    - 'printf "[eb-cli]\naws_access_key_id = %s\naws_secret_access_key = %s\n" "$AWS_ACCESS_KEY_ID" "$AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials'
    - rm .gitignore
    - echo $EB_ENVIRONMENT
    - cd $FOLDER
  script:
    - eb create $EB_ENVIRONMENT -d --timeout 30 -c $EB_ENVIRONMENT -r us-east-1 --single -i t4g.small || exit_code=$?
    - if [ $exit_code -ne 0 ]; then echo "Failed to create staging environment"; fi;
  after_script:
    - rm -r ~/.aws
    - sleep 30


deploy_integ:
  extends: create_integ
  stage: staging
  retry: 2
  script:
    - cp default-service/package.json .
    - mv $CI_ENV_FILE_INTEG default-service/.env
    - echo "REACT_APP_API_URL=$CI_ENVIRONMENT_URL:5002" > ./client/.env
    - echo "REACT_APP_CHAT_URL=$CI_ENVIRONMENT_URL:5003" >> ./client/.env
    - rm -r .platform
    - git add .
    - git status
    - ls -al
    - eb deploy --timeout 30 --staged $EB_ENVIRONMENT
  after_script:
    - rm default-service/.env
    - rm ./client/.env
    - rm -r ~/.aws
    - git add .

acceptance_test:
  image: alpine
  stage: test
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: manual
      allow_failure: false
  script:
    - echo "Acceptance tests not yet implemented, please add and replace this script!"
    - echo "For now, this is just a manual inspection step"
  # TODO: add script here

fail_manual_inspection:
  image: alpine
  stage: test
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: manual
      allow_failure: true
  script:
    - echo "Failing manual inspection..."
    - echo "Now trigger the acceptance_test job!"
    - touch ACCEPTANCE_FAIL.txt
  artifacts:
    paths:
      - ACCEPTANCE_FAIL.txt
    expire_in: 30 mins

stop_integ:
  extends: deploy_integ
  stage: pre-production
  environment:
    action: stop
  script: if test -f "ACCEPTANCE_FAIL.txt"; then exit -1; fi
  after_script:
    - eb terminate --timeout 30 --force $EB_ENVIRONMENT
    - rm -r ~/.aws

create_prod_api:
  stage: pre-production
  image: $EB_IMAGE
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  environment:
    name: prod-api
    url: https://merge-api.freetailhackers.com/
  variables:
    EB_ENVIRONMENT: freetail-merge-$CI_ENVIRONMENT_NAME
    FOLDER: .
  before_script:
    - mkdir ~/.aws/
    - touch ~/.aws/credentials
    - 'printf "[eb-cli]\naws_access_key_id = %s\naws_secret_access_key = %s\n" "$AWS_ACCESS_KEY_ID" "$AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials'
    - rm .gitignore
    - rm .ebextensions/integ-security-group.config
    - echo $EB_ENVIRONMENT
    - cd $FOLDER
  script:
    - if test -f "ACCEPTANCE_FAIL.txt"; then exit -1; fi
    - eb create $EB_ENVIRONMENT -d --timeout 60 -c $EB_ENVIRONMENT -r us-east-1 --elb-type application -im 2 -ix 20 -i t3.small,t3a.small || exit_code=$?
    - if [ $exit_code -ne 0 ]; then echo "Failed to create production environment"; fi;
  after_script:
    - rm -r ~/.aws
    - sleep 30

deploy_prod_api:
  stage: production
  extends: create_prod_api
  retry: 2
  variables:
    FOLDER: default-service
  script:
    - mv $CI_ENV_FILE_PROD_API .env
    - mv ../.elasticbeanstalk .elasticbeanstalk
    - rm ../Procfile
    - rm -r ../.ebextensions
    - mkdir .ebextensions
    - mv $PROD_HTTPS_API_ALB .ebextensions/securelistener-alb.config
    - 'echo "web: npm install && npm run server" > Procfile'
    - git add .
    - eb deploy --timeout 60 --staged $EB_ENVIRONMENT
  after_script:
    - cd $FOLDER
    - rm .env
    - rm .ebextensions/securelistener-alb.config
    - rm -r ~/.aws
    - git add .


stop_prod_api:
  extends: deploy_prod_api
  when: manual
  environment:
    action: stop
  script:
    - mv ../.elasticbeanstalk .elasticbeanstalk
    - eb terminate --timeout 60 --force $EB_ENVIRONMENT
  after_script:
    - rm -r ~/.aws

create_prod_chat:
  stage: pre-production
  image: $EB_IMAGE
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  environment:
    name: prod-chat
    url: https://merge-chat.freetailhackers.com/
  variables:
    EB_ENVIRONMENT: freetail-merge-$CI_ENVIRONMENT_NAME
    FOLDER: .
  before_script:
    - mkdir ~/.aws/
    - touch ~/.aws/credentials
    - 'printf "[eb-cli]\naws_access_key_id = %s\naws_secret_access_key = %s\n" "$AWS_ACCESS_KEY_ID" "$AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials'
    - rm .gitignore
    - rm .ebextensions/integ-security-group.config
    - echo $EB_ENVIRONMENT
    - cd $FOLDER
  script:
    - if test -f "ACCEPTANCE_FAIL.txt"; then exit -1; fi
    - eb create $EB_ENVIRONMENT -d --timeout 60 -c $EB_ENVIRONMENT -r us-east-1 --elb-type application -im 2 -ix 20 -i t3.small,t3a.small || exit_code=$?
    - if [ $exit_code -ne 0 ]; then echo "Failed to create production environment"; fi;
  after_script:
    - rm -r ~/.aws
    - sleep 30

deploy_prod_chat:
  stage: production
  extends: create_prod_chat
  retry: 2
  variables:
    FOLDER: default-service
  script:
    - mv $CI_ENV_FILE_PROD_CHAT .env
    - mv ../.elasticbeanstalk .elasticbeanstalk
    - mv ../.ebextensions .ebextensions
    - mv $PROD_REDIS_CONFIG .ebextensions/options.config
    - rm ../Procfile
    - mv $PROD_HTTPS_CHAT_ALB .ebextensions/securelistener-alb.config
    - 'echo "web: npm install && CHAT_PORT=8080 npm run chat" > Procfile'
    - git add .
    - eb deploy --timeout 60 --staged $EB_ENVIRONMENT
  after_script:
    - cd $FOLDER
    - rm .ebextensions/securelistener-alb.config
    - rm .ebextensions/options.config
    - rm -r ~/.aws
    - git add .


stop_prod_chat:
  extends: deploy_prod_chat
  when: manual
  environment:
    action: stop
  script:
    - mv ../.elasticbeanstalk .elasticbeanstalk
    - eb terminate --timeout 60 --force $EB_ENVIRONMENT
  after_script:
    - rm -r ~/.aws
